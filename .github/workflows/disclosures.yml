name: Update Disclosures (OTC)

on:
  schedule:
    - cron: "17 8 * * *"   # daily at 08:17 UTC
  workflow_dispatch: {}     # allows manual "Run workflow"

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Fetch OTC disclosures (raw)
        run: |
          set -euo pipefail
          URL="https://backend.otcmarkets.com/otcapi/company/financial-report?symbol=TUTH&page=1&pageSize=200"
          # Add common headers so the endpoint doesnâ€™t reject the request
          curl -sS --fail \
            -H "accept: application/json" \
            -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0 Safari/537.36" \
            -H "Referer: https://www.otcmarkets.com/stock/TUTH/disclosure" \
            "$URL" -o raw.json
          test -s raw.json || (echo "Empty response from OTC" && exit 1)

      - name: Create build script
        run: |
          cat > build.js <<'EOF'
          const fs = require('fs');

          function extractId(x) {
            const tryVals = [
              x.filingId, x.filingID, x.id,
              x.documentId, x.documentID,
              x.contentId, x.contentID,
              x.disclosureId, x.disclosureID
            ].filter(v => v !== undefined && v !== null);

            for (const v of tryVals) {
              const m = String(v).match(/\d+/);
              if (m) return m[0];
            }

            const paths = [x.documentUrl, x.url, x.fileUrl, x.link].filter(Boolean);
            for (const p of paths) {
              const s = String(p);
              const m1 = s.match(/[?&]id=(\d+)/);                 // .../filing/view?id=123456
              const m2 = s.match(/\/financial-report\/(\d+)/);    // .../financial-report/123456/content
              const m3 = s.match(/\/filing\/(\d+)/);              // .../filing/123456/...
              if (m1) return m1[1];
              if (m2) return m2[1];
              if (m3) return m3[1];
            }
            return null;
          }

          function normalizeLink(x, symbol='TUTH') {
            const id = extractId(x);
            if (id) return 'https://www.otcmarkets.com/filing/view?id=' + id;

            if (x.documentUrl) {
              const u = String(x.documentUrl);
              if (/^https?:\/\//i.test(u)) return u;
              return 'https://www.otcmarkets.com' + (u.startsWith('/') ? u : '/' + u);
            }
            if (x.url) return String(x.url);
            return 'https://www.otcmarkets.com/stock/' + symbol + '/disclosure';
          }

          (function main() {
            const raw = fs.readFileSync('raw.json', 'utf8');
            let rows = [];
            try { rows = JSON.parse(raw); }
            catch (e) { console.error('Invalid JSON from OTC:', e.message); process.exit(1); }
            if (!Array.isArray(rows)) rows = [];

            const items = rows.map(x => {
              const title = x.title || x.reportType || 'Untitled';
              const iso   = x.publishDate || x.publishedDate || x.date || '';
              const date  = iso ? new Date(iso).toISOString().slice(0,10) : '';
              const link  = normalizeLink(x, 'TUTH');
              const desc  = x.description || x.summary || '';
              return { title, date, description: desc, link };
            }).filter(i => i.title && i.link);

            items.sort((a,b) => new Date(b.date) - new Date(a.date));
            fs.writeFileSync('disclosures.json', JSON.stringify(items.slice(0, 200), null, 2));
            console.log('Wrote disclosures.json with', items.length, 'items.');
          })();
          EOF

      - name: Build disclosures.json
        run: node build.js

      - name: Commit & push if changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add disclosures.json raw.json
            git commit -m "chore: auto-update disclosures.json from OTC"
            git push
          else
            echo "No changes to commit."
          fi
